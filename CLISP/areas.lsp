(defun areaCuadrado()
    (princ "Dame la longitud de uno de sus lados: ")
    (setq num (read))
    (setq resultado (* num num))
)

(defun areaTriangulo()
    (princ "Dame la longitud de la base: ")
    (setq base (read))
    (princ "Dame la longitud de la altura: ")
    (setq altura (read))
    (setq resultado (/ (* base altura) 2))
)

(defun areaRectangulo()
    (princ "Dame la longitud de la base: ")
    (setq base (read))
    (princ "Dame la longitud de la altura: ")
    (setq altura (read))
    (setq resultado (* base altura))
)

(defun areaRombo()
    (princ "Dame la longitud de la diagonal mayor: ")
    (setq dMayor (read))
    (princ "Dame la longitud de la diagonal menor: ")
    (setq dMenor (read))
    (setq resultado (/ (* dMayor dMenor) 2))
)

(defun areaTrapecio()
    (princ "Dame la longitud de la base mayor: ")
    (setq bMayor (read))
    (princ "Dame la longitud de la base menor: ")
    (setq bMenor (read))
    (princ "Dale la longitud de la altura: ")
    (setq altura (read))
    (setq resultado (/ (* (+ bMayor bMenor) altura) 2))
)

(defun areaCirculo() 
    (princ "Dame el radio del circulo: ")
    (setq radio (read))
    (setq resultado (* 3.14 (* radio radio)))
)

(defun areaPoligonoReg()
    (princ "Dame el numero de lados que tiene el poligono: ")
    (setq lados (read))
    (princ "Dame la longitud de la base de uno de los lados: ")
    (setq base (read))
    (princ "Dame la longitud del apotema: ")
    (setq apotema (read))
    (setq resultado (/ (* (* lados base) apotema) 2))
)